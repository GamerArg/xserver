syntax = "proto3";

package de.mickare.xserver.protocol;

import "HandshakeProto.proto";
import "NetworkProto.proto";
import "ComponentUUID.proto";
import "google/protobuf/any.proto";

message Packet {
	oneof value {
		# Basic
		HeartbeatMessage heartbeat = 1;
		CloseMessage close = 2;
		
		# Handshake
		Login login = 10;
		AuthChallengeMessage authChallenge = 11;
		AuthResponse authResponse = 12;
		AuthSuccess authSuccess = 13;
		ActionRequest actionRequest = 14;
		ActionResponse actionResponse = 15;
		
		ChannelRegister channelRegister = 20;
		ChannelMessage channelMessage = 21;
		ChannelForwarding channelForwarding = 22;
	}
}

message HeartbeatMessage {
}

message ErrorMessage {
	enum Type {
		SERVER_ERROR = 0;
		PROTOCOL_ERROR = 1;
		UNAUTHORIZED = 2;
		UNAVAILABLE = 3;
	}
	Type type = 1;
	string text = 2;
}

message CloseMessage {
	oneof reason {
		string normal = 1;
		Server replaced = 2;
		ErrorMessage error = 3;
	}
}

message ChannelRegister {
	int32 channelId = 1;
	string name = 1;
}

message ChannelMessage {
	int32 channelId = 1;
	bytes data = 2;
}

message Target {
	boolean all = 1;
	repeated UUID receiverIds = 2;
	repeated string groups = 3;
}

message ChannelForwarding {
	UUID senderId = 1;
	Target target = 2;
	uint32 messageId = 3;
	ChannelMessage message = 4;
}


